name: 'Domain Decomposition Toolkit CI'
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
jobs:
  build-on-ubuntu:
    runs-on: ubuntu-latest   
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        shell: bash
        run: |
          sudo apt-get install -y cmake libboost-program-options-dev libhdf5-mpi-dev curl
          git clone -b v2.x https://github.com/catchorg/Catch2.git
          cd Catch2
          cmake -Bbuild -H. -DBUILD_TESTING=OFF
          sudo cmake --build build/ --target install
          cd ..
          git clone https://github.com/trilinos/Trilinos.git
          cd Trilinos
          cmake \
          -Bbuild -H. \
          -DTPL_ENABLE_MPI:BOOL=ON \
          -DTrilinos_ENABLE_ALL_PACKAGES:BOOL=OFF \
          -DTrilinos_ENABLE_Zoltan:BOOL=ON \
          -DTrilinos_ENABLE_Fortran:BOOL=OFF \
          -DZoltan_ENABLE_EXAMPLES:BOOL=ON \
          -DZoltan_ENABLE_TESTS:BOOL=ON \
          -DBUILD_SHARED_LIBS=ON
          sudo cmake --build build/ --target install
          cd ..
          git clone -b v4.8.1 https://github.com/Unidata/netcdf-c.git
          cd netcdf-c
          cmake \
          -Bbuild -H. \
          -DCMAKE_C_COMPILER=mpicc \
          -DCMAKE_CXX_COMPILER=mpicxx \
          -DCMAKE_BUILD_TYPE=Release
          sudo cmake --build build/ --target install
          cd ..
          git clone -b v4.3.1 https://github.com/Unidata/netcdf-cxx4.git
          cd netcdf-cxx4
          cmake \
          -Bbuild -H. \
          -DCMAKE_C_COMPILER=mpicc \
          -DCMAKE_CXX_COMPILER=mpicxx \
          -DCMAKE_BUILD_TYPE=Release
          sudo cmake --build build/ --target install
          cd ..
      - name: Configure
        shell: bash
        run: |
          mkdir build
          cmake -B build -G "Unix Makefiles" .
      - name: Build
        shell: bash
        run: |
          cmake --build build --config Release
      - name: Run unit tests
        shell: bash
        run: |
          make test